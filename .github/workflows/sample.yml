name: Build and Release

on:
  push:
     branches:
      - main
  pull_request: null

jobs:
  build_and_release:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (Bash)
        if: runner.os != 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip install yahooquery
          pip install tkmacosx
        shell: bash

      - name: Install dependencies (PowerShell)
        if: runner.os == 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip install yahooquery
          pip install tkmacosx
        shell: pwsh

      - name: Create executable (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --noconsole --add-data "assets:assets" user_interface.py
          hdiutil create -volname UserInterface -srcfolder dist/ -ov -format UDZO dist/user_interface.dmg
        shell: bash

      - name: Create executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --noconsole --add-data "assets:assets" user_interface.py
        shell: bash

      - name: Create executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --noconsole --add-data "assets;assets" user_interface.py
        shell: pwsh

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: user_interface-macOS
          path: user_interface.dmg

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: user_interface-Linux
          path: dist/user_interface.app

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: user_interface-Windows
          path: dist/user_interface.exe

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: 'v0.0.1'
          release_name: Release test
          draft: true
          prerelease: true

      - name: Upload Release Asset (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/user_interface.dmg
          asset_name: user_interface-macOS.dmg
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/user_interface
          asset_name: user_interface-Linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/user_interface.exe
          asset_name: user_interface-Windows.exe
          asset_content_type: application/octet-stream
